Index: home.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- home.tsx	(revision 81a4f383c8c92a934b96b20fb087d211b867001c)
+++ home.tsx	(revision )
@@ -10,12 +10,17 @@
   }
 
   view = state => {
-    return state.authorized && <div>
-      <h1>{state.content} - {user.displayName} </h1>
+  console.log('[home view] render', state)
+    return <div>
+      <h1>{state.content}</h1>
+      <h3>Hello {state.authorized ? user.displayName : 'Visitor'}, whats up?</h3>
     </div>
   }
 
   update = {
-    '#': state => ({ ...state, authorized: this.auth() })
+    '#': state => {
+      console.log("home", "eventName: # ", state, { ...state, authorized: this.auth() })
+      return { ...state, authorized: this.auth() }
+    }
   }
-}
+}
\ No newline at end of file
Index: main.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- main.tsx	(revision 81a4f383c8c92a934b96b20fb087d211b867001c)
+++ main.tsx	(revision )
@@ -2,6 +2,7 @@
 import home from './home';
 import signin, { user } from './firebase-auth';
 import about from './about';
+import authorize from './authorize';
 import contact from './contact';
 
 const app_id = 'my-app';
@@ -10,9 +11,11 @@
 new home().mount(main_id);
 new about().mount(main_id);
 new contact().mount(main_id);
+new authorize().mount(main_id);
 new signin().mount();
 
 app.on('//', route => {
+  console.log("route", route)
   const menus = document.querySelectorAll('.navbar-nav li');
   for (let i = 0; i < menus.length; ++i) menus[i].classList.remove('active');
   const item = document.querySelector(`[href='${route}']`);
@@ -24,7 +27,8 @@
   state = {}
 
   view = state => {
-    return user && <div className=''>
+    console.log('[app render]')
+    return <div className=''>
       <nav className="navbar navbar-default navbar-static-top">
         <div className="container">
           <div className="navbar-header">
@@ -42,6 +46,7 @@
               <li className="active"><a href="#">Home</a></li>
               <li><a href="#about">About</a></li>
               <li><a href="#contact">Contact</a></li>
+              <li><a href="#signin">Sign In</a></li>
               <li><a href="#signout">Sign Out</a></li>
             </ul>
           </div>
@@ -52,7 +57,7 @@
   }
 
   update = {
-    '#auth': state => state
+    '#auth': state => state,
   }
 
 }
Index: .idea/typescript-compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/typescript-compiler.xml	(revision )
+++ .idea/typescript-compiler.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="TypeScriptCompiler">
+    <option name="isCompilerEnabled" value="true" />
+    <option name="useConfig" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: firebase-auth.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- firebase-auth.tsx	(revision 81a4f383c8c92a934b96b20fb087d211b867001c)
+++ firebase-auth.tsx	(revision )
@@ -32,14 +32,16 @@
 
 firebase.auth().onAuthStateChanged(function (_user) {
   // console.log('firebase auth: ', _user, document.location.hash)
+
   if (_user) {
     user = _user;
-    app.run('#auth');
-    app.run('route', document.location.hash);
+    // app.run('#auth');
+    // app.run('route', document.location.hash);
   } else {
     user = null;
-    app.run('#signin');
+    // app.run('#signin');
   }
+  app.run('#auth');
 })
 
 const ui = new firebaseui.auth.AuthUI(firebase.auth());
@@ -47,7 +49,7 @@
 export default class firebaseComponent extends Component {
   update = {
     '#signin': _ => {
-      uiConfig.signInSuccessUrl = document.location.href;
+      uiConfig.signInSuccessUrl = document.location.origin;
       ui.start('#my-app', uiConfig);
     },
     '#signout': _ => {
\ No newline at end of file
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package-lock.json	(revision 81a4f383c8c92a934b96b20fb087d211b867001c)
+++ package-lock.json	(revision )
@@ -2834,15 +2834,6 @@
         "xtend": "4.0.1"
       }
     },
-    "string_decoder": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz",
-      "integrity": "sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==",
-      "dev": true,
-      "requires": {
-        "safe-buffer": "5.1.1"
-      }
-    },
     "string-width": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
@@ -2852,6 +2843,15 @@
         "code-point-at": "1.1.0",
         "is-fullwidth-code-point": "1.0.0",
         "strip-ansi": "3.0.1"
+      }
+    },
+    "string_decoder": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz",
+      "integrity": "sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==",
+      "dev": true,
+      "requires": {
+        "safe-buffer": "5.1.1"
       }
     },
     "strip-ansi": {
